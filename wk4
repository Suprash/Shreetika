#1
def fetch_file_data(filepath):
  
    f = open(filepath, "r")  # Open in read mode
    data = f.read()  # Extract content
    f.close()  # Close after reading
    return data  # Return the fileâ€™s text

def store_in_file(filepath, text):
    f = open(filepath, "w")  # Open in write mode
    f.write(text)  # Save content
    f.close()  # Close after writing
# Saving text to a file
store_in_file("notes.txt", "Learning Python step by step.")

# Retrieving text from the file
output = fetch_file_data("notes.txt")
print(output)

#2
def find_longest_word(file_path):
    with open(file_path, "r") as file:  # Open file in read mode
        words = file.read().split()  # Read content and split into words
    
    longest = ""  
    for word in words:
        if len(word) > len(longest):  # Check if the word is longer than the current longest
            longest = word
    return longest  # longest word
longest_word = find_longest_word("sample.txt")
print(longest_word)  # Output: "programming"

#3
def check_file_empty(file_path):
    with open(file_path, "r") as file:  # Open file in read mode
        return file.read().strip() == ""  
print(check_file_empty("sample.txt"))  
print(check_file_empty("data.txt"))   

#4
def reverse_file_content(file_path):

    with open(file_path, "r") as file:
        content = file.read()  # Read the entire content

    reversed_content = content[::-1]  # Reverse the content using slicing

    with open("reversed.txt", "w") as new_file:
        new_file.write(reversed_content)  # Write reversed content to new file
reverse_file_content("sample.txt")

#5
def convert_to_uppercase(string_list):
    
    uppercase_list = list(map(lambda s: s.upper(), string_list))  # Convert to uppercase
    return uppercase_list  # Return the new list
strings = ["hello", "world", "python", "programming"]

result1 = convert_to_uppercase(strings)
print(result1)

#6
def filter_even_length_words(word_list):
    even_length_words = [word for word in word_list if len(word) % 2 == 0]  # Include words with even length
    return even_length_words  # Return the list of even-length words

words = ["hello", "world", "Python", "is", "fun", "coding", "great"]

# Filter even-length words
result = filter_even_length_words(words)
print(result)  


#7
def process_file_with_lambda(file_name):
    with open(file_name, "r") as file:
        lines = file.readlines()  # Read all lines from the file

    with open(file_name, "w") as file:
        for line in lines:
            processed_line = ' '.join(map(lambda word: word.upper(), line.split()))
            file.write(processed_line + '\n')  # Write the processed line back to the file
process_file_with_lambda("example.txt")








